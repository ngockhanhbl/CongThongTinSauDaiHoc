{"remainingRequest":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\src\\components\\content\\patient_modules\\patient_views_modules\\ListPatient.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\src\\components\\content\\patient_modules\\patient_views_modules\\ListPatient.vue","mtime":1593847511091},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ryan\\\\QL-HoSoBenhAn\\\\medicalproject\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Ryan\\\\QL-HoSoBenhAn\\\\medicalproject\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport PatientService from '@/services/PatientService';\nimport DrugService from '@/services/DrugService';\nexport default {\n  data: function data() {\n    return {\n      showModal: false,\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: ''\n      },\n      user: null,\n\n      get isUserLoggedIn() {\n        return localStorage.getItem('isUserLoggedIn' || false);\n      },\n\n      arrayNameDoctor: [],\n      condition: false,\n      filesDisplay: [],\n      filesDisplay2: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"patient_records\", \"patient_records_details\", \"fields\", \"pageOptions\", \"nameDoctorWrite_records\", \"AlternativeRecord\", \"patientInfo\"]), {\n    totalRows: {\n      get: function get() {\n        return this.$store.getters.totalRows;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'totalRows'\n        });\n      }\n    },\n    patient_filter: {\n      get: function get() {\n        return this.$store.getters.patient_filter;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'patient_filter'\n        });\n      }\n    },\n    currentPage: {\n      get: function get() {\n        return this.$store.getters.currentPage;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'currentPage'\n        });\n      }\n    },\n    perPage: {\n      get: function get() {\n        return this.$store.getters.perPage;\n      },\n      set: function set(payload) {\n        this.$store.dispatch(\"update_inforListPatient\", {\n          payloadValue: payload,\n          payloadRouter: 'perPage'\n        });\n      }\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var userCONST, index, i, name, lengthOfAlternativeRecord, _i, _index, base64String, files_temp, id_patient, payload, lengthRecord, idDoctorWriteRecord, _i2, ArrayNameDoctor, _DrugRecord, _lengthOfAlternativeRecord, _i3, _index2, _base64String, _index3, _i4, _name;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userCONST = JSON.parse(localStorage.getItem('user'));\n              this.user = userCONST;\n\n              if (!(this.user.roles == 1)) {\n                _context.next = 7;\n                break;\n              }\n\n              this.condition = true;\n\n              if (this.patient_records.length) {\n                for (index = 0; index < this.patient_records.length; index++) {\n                  for (i = 0; i < this.nameDoctorWrite_records.length; i++) {\n                    if (this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor) {\n                      name = this.nameDoctorWrite_records[i].firstname + ' ' + this.nameDoctorWrite_records[i].lastname;\n                      this.arrayNameDoctor[index] = name;\n                    }\n                  }\n                }\n\n                this.totalRows = this.patient_records.length;\n                lengthOfAlternativeRecord = this.AlternativeRecord.length;\n\n                for (_i = 0; _i < lengthOfAlternativeRecord; _i++) {\n                  for (_index = 0; _index < this.AlternativeRecord[_i].length; _index++) {\n                    if (this.AlternativeRecord[_i][_index].image) {\n                      try {\n                        base64String = btoa(new Uint8Array(this.AlternativeRecord[_i][_index].image.data).reduce(function (data, byte) {\n                          return data + String.fromCharCode(byte);\n                        }, ''));\n                        files_temp = {\n                          url: null,\n                          id_record: null,\n                          isClick: false\n                        };\n                        files_temp.url = new Buffer(base64String, 'base64');\n                        files_temp.id_record = this.AlternativeRecord[_i][_index].id_record;\n                        this.filesDisplay2.push(files_temp);\n                      } catch (error) {\n                        this.$toasted.show(\"\".concat(error.response.data.error), {\n                          theme: \"toasted-primary\",\n                          position: \"bottom-center\",\n                          duration: 5000\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n\n              _context.next = 27;\n              break;\n\n            case 7:\n              if (!(this.user.roles == 3)) {\n                _context.next = 27;\n                break;\n              }\n\n              id_patient = this.patientInfo.id_account;\n              _context.next = 11;\n              return PatientService.show(id_patient);\n\n            case 11:\n              payload = _context.sent.data;\n              lengthRecord = payload.length;\n\n              if (!lengthRecord) {\n                _context.next = 26;\n                break;\n              }\n\n              idDoctorWriteRecord = [];\n\n              for (_i2 = 0; _i2 < lengthRecord; _i2++) {\n                idDoctorWriteRecord[_i2] = payload[_i2].id_doctor;\n              }\n\n              _context.next = 18;\n              return PatientService.get_nameDoctorRecordPatient({\n                id_doctor: idDoctorWriteRecord\n              });\n\n            case 18:\n              ArrayNameDoctor = _context.sent.data;\n              this.$store.dispatch(\"set_nameDoctorWrite_records\", ArrayNameDoctor);\n              _context.next = 22;\n              return DrugService.get_DrugRecordPatient({\n                id_account: 0\n              });\n\n            case 22:\n              _DrugRecord = _context.sent.data;\n              this.$store.dispatch(\"set_patient_records_details\", _DrugRecord);\n              _lengthOfAlternativeRecord = this.AlternativeRecord.length;\n\n              for (_i3 = 0; _i3 < _lengthOfAlternativeRecord; _i3++) {\n                for (_index2 = 0; _index2 < this.AlternativeRecord[_i3].length; _index2++) {\n                  if (this.AlternativeRecord[_i3][_index2].image) {\n                    try {\n                      _base64String = btoa(new Uint8Array(this.AlternativeRecord[_i3][_index2].image.data).reduce(function (data, byte) {\n                        return data + String.fromCharCode(byte);\n                      }, ''));\n                      files_temp = {\n                        url: null,\n                        id_record: null,\n                        isClick: false\n                      };\n                      files_temp.url = new Buffer(_base64String, 'base64');\n                      files_temp.id_record = this.AlternativeRecord[_i3][_index2].id_record;\n                      this.filesDisplay2.push(files_temp);\n                    } catch (error) {\n                      this.$toasted.show(\"\".concat(error.response.data.error), {\n                        theme: \"toasted-primary\",\n                        position: \"bottom-center\",\n                        duration: 5000\n                      });\n                    }\n                  }\n                }\n              }\n\n            case 26:\n              this.condition = true;\n\n            case 27:\n              if (this.patient_records.length) {\n                for (_index3 = 0; _index3 < this.patient_records.length; _index3++) {\n                  for (_i4 = 0; _i4 < this.nameDoctorWrite_records.length; _i4++) {\n                    if (this.nameDoctorWrite_records[_i4].id_account == this.patient_records[_index3].id_doctor) {\n                      _name = this.nameDoctorWrite_records[_i4].firstname + ' ' + this.nameDoctorWrite_records[_i4].lastname;\n                      this.arrayNameDoctor[_index3] = _name;\n                    }\n                  }\n                }\n              }\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    info: function info(item, index, button) {\n      var _this = this;\n\n      this.infoModal.title = \"\".concat(this.patient_records[index].patient_title);\n      var temp2 = this.patient_records_details.filter(function (f) {\n        return f.id_record == item.id;\n      });\n      this.filesDisplay = this.filesDisplay2.filter(function (f) {\n        return f.id_record === item.id;\n      });\n\n      if (temp2.length > 0 || this.filesDisplay.length > 0) {\n        if (temp2.length > 0) {\n          temp2.forEach(function (element) {\n            var temp = \"        \\n              T\\xEAn thu\\u1ED1c: \".concat(element.name, \"\\n              T\\u1ED5ng: \").concat(element.total, \"\\n              S\\xE1ng: \").concat(element.morning, \"\\n              Tr\\u01B0a: \").concat(element.midday, \"\\n              Chi\\u1EC1u:\").concat(element.afternoon, \"\\n              T\\u1ED1i:\").concat(element.night, \"\\n              Ghi ch\\xFA:\").concat(element.note, \"\\n              \");\n            _this.infoModal.content += temp;\n          });\n        } else {\n          this.infoModal.content = \"Kh\\xF4ng c\\xF3 \\u0111\\u01A1n thu\\u1ED1c n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        }\n\n        if (this.filesDisplay.length > 0) {\n          this.infoModal.alternativeContent = '';\n        } else {\n          this.infoModal.alternativeContent = \"Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        }\n      } else {\n        this.infoModal.content = \"Kh\\xF4ng c\\xF3 b\\u1EA3n ghi n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n        this.infoModal.alternativeContent = \"Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh n\\xE0o \\u0111\\u01B0\\u1EE3c t\\xECm th\\u1EA5y\";\n      }\n\n      this.$root.$emit('bv::show::modal', this.infoModal.id, button);\n    },\n    resetInfoModal: function resetInfoModal() {\n      this.infoModal.title = '';\n      this.infoModal.content = '';\n    },\n    onFiltered: function onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  }\n};",{"version":3,"sources":["ListPatient.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-container fluid v-if=\"patient_records.length && this.isUserLoggedIn && condition \">\r\n    <!-- User Interface controls -->\r\n    <div class=\"pt-5 pb-4\">\r\n      <b-row class=\"my-1 justify-content-between\">\r\n          <div class=\"pl-4\">\r\n              Bảng hồ sơ bệnh án\r\n          </div>\r\n            <div class=\"subcriber\">\r\n                <span><input type=\"text\" v-model=\"patient_filter\"  placeholder=\"Chụp X-quang...\"/></span>\r\n                <span class=\"btn-sub\" :disabled=\"!patient_filter\" @click=\"patient_filter = ''\"><img src=\"@/assets/images/search.svg\" /><span class=\"pl-2 pr-1\" >Xóa Tìm Kiếm</span></span>\r\n            </div>\r\n            <div class=\"pr-3 options\">\r\n                <span>Hiển Thị</span>\r\n                <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>    \r\n            </div>\r\n      </b-row>\r\n    </div>\r\n\r\n    <!-- Main table element -->\r\n    <b-table\r\n      bordered\r\n      show-empty\r\n      stacked=\"md\"\r\n      :items=\"patient_records\"\r\n      :fields=\"fields\"\r\n      :current-page=\"currentPage\"\r\n      :per-page=\"perPage\"\r\n      :filter=\"patient_filter\"\r\n      @filtered=\"onFiltered\"\r\n    >\r\n\r\n      <template slot=\"patient_records_details\" slot-scope=\"row\" >\r\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1 details btn-success\">\r\n          <img src=\"@/assets/images/notepad.svg\" />\r\n        </b-button>\r\n      </template>\r\n\r\n      <template slot=\"patient_name_doctor\" >\r\n            <li>{{ this.arrayNameDoctor[0] }}</li>\r\n      </template> \r\n\r\n      <template slot=\"patient_name_doctor\" slot-scope=\"data\" >\r\n          <ul v-if=\"condition\">\r\n            {{ arrayNameDoctor[data.index] }}\r\n          </ul>\r\n      </template>\r\n \r\n\r\n    </b-table>\r\n\r\n    <b-row>\r\n      <b-col md=\"6\" class=\"my-1\">\r\n        <b-pagination\r\n          v-model=\"currentPage\"\r\n          :total-rows=\"totalRows\"\r\n          :per-page=\"perPage\"\r\n          class=\"my-0\"\r\n        ></b-pagination>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <!-- Info modal -->\r\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n      <pre>{{ infoModal.content }}</pre>\r\n      <pre>{{ infoModal.alternativeContent }}</pre>\r\n      <div class=\"row\">\r\n        <span v-for=\"(item,index) in filesDisplay\" :key=\"index\" class=\"row pl-5\"> \r\n          <img :src=\"filesDisplay[index].url\" alt=\"err\" class=\"imageDisplay\" @click.prevent=\"filesDisplay[index].isClick = !filesDisplay[index].isClick\" :class=\"{full : filesDisplay[index].isClick}\" >\r\n        </span>\r\n      </div>\r\n    </b-modal>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters} from \"vuex\";\r\nimport PatientService from '@/services/PatientService'\r\nimport DrugService from '@/services/DrugService'\r\n  export default {\r\n     data(){\r\n      return{\r\n        showModal: false,\r\n        infoModal: {\r\n            id: 'info-modal',\r\n            title: '',\r\n            content: '',\r\n          },\r\n          user:null,\r\n          get isUserLoggedIn() {\r\n            return localStorage.getItem('isUserLoggedIn' || false);\r\n          },\r\n          arrayNameDoctor:[],\r\n          condition:false,\r\n          filesDisplay: [],\r\n          filesDisplay2:[]\r\n      }\r\n    },\r\n    computed: {\r\n        ...mapGetters(\r\n      [\"patient_records\",\r\n      \"patient_records_details\",\r\n      \"fields\",\r\n      \"pageOptions\",\r\n      \"nameDoctorWrite_records\",\r\n      \"AlternativeRecord\",\r\n      \"patientInfo\"]\r\n    ),\r\n    totalRows: {\r\n           get(){ \r\n               return this.$store.getters.totalRows\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'totalRows'\r\n                })\r\n           }\r\n        },\r\n    patient_filter: {\r\n           get(){ \r\n               return this.$store.getters.patient_filter\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'patient_filter'\r\n                })\r\n           }\r\n        },\r\n    currentPage: {\r\n           get(){ \r\n               return this.$store.getters.currentPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'currentPage'\r\n                })\r\n           }\r\n        },\r\n    perPage: {\r\n           get(){ \r\n               return this.$store.getters.perPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'perPage'\r\n                })\r\n           }\r\n        }\r\n    },\r\n    async mounted() {\r\n      const userCONST = JSON.parse(localStorage.getItem('user'));\r\n      this.user = userCONST\r\n\r\n      if(this.user.roles == 1){\r\n        this.condition = true\r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                this.arrayNameDoctor[index] = name\r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n          this.totalRows = this.patient_records.length\r\n\r\n\r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n\r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n                }catch(error){\r\n                      this.$toasted.show(`${error.response.data.error}`, { \r\n                        theme: \"toasted-primary\", \r\n                        position: \"bottom-center\", \r\n                        duration : 5000\r\n                    });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      }else if(this.user.roles == 3){\r\n          const id_patient = this.patientInfo.id_account\r\n          const payload = (await PatientService.show(id_patient)).data\r\n          const lengthRecord = payload.length\r\n          if(lengthRecord){\r\n            const idDoctorWriteRecord = []\r\n            for(let i = 0 ;i<lengthRecord;i++){\r\n              idDoctorWriteRecord[i]= payload[i].id_doctor\r\n            }\r\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\r\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\r\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\r\n              id_account: 0\r\n            })).data\r\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\r\n        \r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n          \r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n              }catch (error) {\r\n                    this.$toasted.show(`${error.response.data.error}`, { \r\n                      theme: \"toasted-primary\", \r\n                      position: \"bottom-center\", \r\n                      duration : 5000\r\n                  });\r\n                  } \r\n              }\r\n            }\r\n          }\r\n          }  \r\n          this.condition = true\r\n      }\r\n      \r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                  this.arrayNameDoctor[index] = name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    },\r\n    methods: {\r\n      info(item, index, button) {\r\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\r\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\r\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\r\n        \r\n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\r\n          if(temp2.length >0){\r\n            temp2.forEach(element => {\r\n              let temp =              \r\n              `        \r\n              Tên thuốc: ${element.name }\r\n              Tổng: ${element.total}\r\n              Sáng: ${element.morning}\r\n              Trưa: ${element.midday}\r\n              Chiều:${element.afternoon}\r\n              Tối:${element.night}\r\n              Ghi chú:${element.note}\r\n              ` \r\n              this.infoModal.content += temp;\r\n            });\r\n          }else{\r\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\r\n          }\r\n\r\n\r\n    if(this.filesDisplay.length >0){\r\n      this.infoModal.alternativeContent = ''\r\n    }else{\r\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n    }\r\n        \r\n        }\r\n        else {\r\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\r\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n        }\r\n\r\n\r\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n  \r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = ''\r\n        this.infoModal.content = ''\r\n      },\r\n\r\n\r\n      onFiltered(filteredItems) {\r\n        // Trigger pagination to update the number of buttons/pages due to filtering\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.btn-sub {\r\n   border: 2px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  padding: 6px;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n    }\r\n.btn-sub img {\r\n    height: 1.2em;\r\n    width: 1.2em;\r\n}\r\n.subcriber input {\r\n  border: 2px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n  width: 20vw;\r\n}\r\n.details{\r\n    cursor: pointer;\r\n}\r\n.details img{\r\n  height: 1.3rem;\r\n  width:1.3rem;\r\n}\r\nselect{\r\n    width: 50%;\r\n}\r\n.options select{\r\n    width: 80px;\r\n    margin-left: 1.5rem;\r\n}\r\nli{\r\n  list-style: none;\r\n}\r\n.imageDisplay {\r\n  height: 5rem;\r\n  width: 5rem;\r\n   cursor: pointer;\r\n}\r\n\r\n.imageDisplay img {\r\n  width: 150px;\r\n  border-radius: 2px;\r\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.5);\r\n}\r\n.full{\r\n    position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width:40%;\r\n  height:auto;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components/content/patient_modules/patient_views_modules"}]}