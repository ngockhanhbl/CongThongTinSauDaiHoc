{"remainingRequest":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\src\\components\\content\\admin_modules\\AdminManagerRegister.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\src\\components\\content\\admin_modules\\AdminManagerRegister.vue","mtime":1593847511087},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ryan\\QL-HoSoBenhAn\\medicalproject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters} from \"vuex\";\r\nimport HospitalService from '@/services/HospitalService'\r\nimport AccountService from '@/services/AccountService'\r\nimport AdminService from '@/services/AdminService'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        hospitals_register:[],\r\n        account_hospital_register:[],\r\n        fields: [\r\n          {key: 'name_hospital', label: 'Tên bệnh viện', sortable: true, class: 'text-center'},\r\n          { key: 'phone_hospital', label: 'Số điện thoại', sortable: true, sortDirection: 'desc', class: 'text-center' },\r\n          { key: 'address_hospital', label: 'Địa chỉ' },\r\n          { key: 'email', label: 'Email'},\r\n          { key: 'actions', label: 'Actions', class: 'd-flex justify-content-center ' }\r\n        ],\r\n        totalRows: 1,\r\n        currentPage: 1,\r\n        perPage: 5,\r\n        pageOptions: [5, 10, 15],\r\n        filter: null,\r\n        infoModal: {\r\n          id: 'info-modal',\r\n          title: '',\r\n          content: ''\r\n        },\r\n        error:'',\r\n        id_account:'',\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"isUserLoggedIn\",\"hospital_account\",\"hospitalInfomation\"])\r\n    },\r\n    async mounted() {\r\n      const user = localStorage.getItem(\"user\")\r\n      const userJSON = JSON.parse(user)\r\n      const roles = userJSON.roles\r\n      this.hospitals_register = (await HospitalService.getAllRegisterHospitals(roles)).data\r\n      this.account_hospital_register = (await AccountService.getAllRegisterAcountHospitals(roles)).data\r\n      this.totalRows = this.hospitals_register.length\r\n    },\r\n    methods: {\r\n      emitUpdateHospitalRegister(){\r\n        this.$root.$emit('UpdateHospitalRegister')\r\n      },\r\n      async refuseRegiterHospital(item, index, button){\r\n        const delete_result = (await AdminService.refuseRegiterHospital({\r\n          email: item.email\r\n        })).data\r\n\r\n          this.$toasted.show(`Đã xóa ${item.name_hospital} Thành công !!`, { \r\n            theme: \"bubble\", \r\n            position: \"bottom-right\", \r\n            duration : 2000\r\n        });\r\n        if (~index) // if the hospitals_register exists in array(Bitwise NOT operator.)\r\n          this.hospitals_register.splice(index, 1)\r\n      },\r\n\r\n      async acceptRegisterHospital(item, index, button){\r\n            if(!this.id_account){\r\n                try {\r\n                    const response = await AuthenticationService.register({\r\n                      email: item.email,\r\n                      password: item.password,\r\n                      roles: 2\r\n                    })\r\n                    this.id_account = response.data.user.id\r\n                }catch (error) {\r\n                        this.$toasted.show(`Có Lỗi Xảy ra ${error.response.data.error}  !!`, { \r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\", \r\n                            duration : 2000\r\n                        });\r\n                      }\r\n                  }\r\n          try {\r\n            const response2 = await AuthenticationService.hospital({\r\n                id_account:this.id_account,\r\n                name_hospital:item.name_hospital,         \r\n                phone_hospital:item.phone_hospital,\r\n                address_hospital:item.address_hospital\r\n            })\r\n            this.$toasted.show(`Đã Thêm ${item.name_hospital} Thành công !!`, { \r\n              theme: \"bubble\", \r\n              position: \"bottom-right\", \r\n              duration : 2000\r\n          });\r\n          try {\r\n            await AdminService.refuseRegiterHospital({email: item.email})            \r\n          } catch (error) {\r\n            this.$toasted.show(`Có Lỗi Xảy ra ${error.response.data.error}  !!`, { \r\n              theme: \"bubble\", \r\n              position: \"bottom-right\", \r\n              duration : 2000\r\n          });\r\n          }\r\n\r\n          if (~index) // if the hospitals_register exists in array(Bitwise NOT operator.)\r\n            this.hospitals_register.splice(index, 1)\r\n          this.$store.dispatch(\"fetch_HospitalList\")\r\n          this.$store.dispatch(\"fetch_AccountHospitalList\")\r\n          }catch (error) {\r\n              this.error = error.response.data.error\r\n            }\r\n        },\r\n      onFiltered(filteredItems) {\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      },\r\n    }\r\n  }\r\n",{"version":3,"sources":["AdminManagerRegister.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"AdminManagerRegister.vue","sourceRoot":"src/components/content/admin_modules","sourcesContent":["<template>\r\n    <div>\r\n            <div class=\"main_register m-auto \">\r\n              <div class=\"d-flex pr-5 pt-4 \">\r\n                <div class=\"mr-auto pl-5 pt-3\">Xin Chào Admin</div>\r\n              </div>\r\n                  <b-row class=\"px-5\">\r\n                    <b-col md=\"6\" class=\"my-3\">\r\n                      <b-form-group label-cols-sm=\"3\" label=\"Filter\" class=\"mb-0\">\r\n                        <b-input-group>\r\n                          <b-form-input v-model=\"filter\" placeholder=\"Type to Search\"></b-form-input>\r\n                          <b-input-group-append>\r\n                            <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\r\n                          </b-input-group-append>\r\n                        </b-input-group>\r\n                      </b-form-group>\r\n                    </b-col>\r\n\r\n                    <b-col md=\"6\" class=\"my-3\">\r\n                      <b-form-group label-cols-sm=\"3\" label=\"Per page\" class=\"mb-0\">\r\n                        <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>\r\n                      </b-form-group>\r\n                    </b-col>\r\n                  </b-row>\r\n                <div class=\"register\">\r\n                    <div class=\"p_1r mlr_1-5r\" >\r\n                      <b-table\r\n                      small \r\n                        show-empty\r\n                        bordered\r\n                        striped\r\n                        hover\r\n                        stacked=\"md\"\r\n                        :items=\"hospitals_register\"\r\n                        :fields=\"fields\"\r\n                        :current-page=\"currentPage\"\r\n                        :per-page=\"perPage\"\r\n                        :filter=\"filter\"\r\n                        @filtered=\"onFiltered\"\r\n                      >\r\n                        <template slot=\"actions\" slot-scope=\"row\" class=\"d-flex justify-content-start\">\r\n                          <b-button size=\"sm\" @click=\"acceptRegisterHospital(row.item, row.index, $event.target)\" class=\"ml-4 mr-4 btn-info text-white\">\r\n                            Đồng ý\r\n                          </b-button>  \r\n\r\n                          <b-button size=\"sm\" @click=\"refuseRegiterHospital(row.item, row.index, $event.target)\" class=\"btn-danger text-white \">\r\n                            Từ chối\r\n                          </b-button>\r\n                        </template>\r\n\r\n                      </b-table>\r\n\r\n                      <b-row>\r\n                        <b-col md=\"6\" class=\"my-1\">\r\n                          <b-pagination\r\n                            v-model=\"currentPage\"\r\n                            :total-rows=\"totalRows\"\r\n                            :per-page=\"perPage\"\r\n                            class=\"my-0\"\r\n                          ></b-pagination>\r\n                        </b-col>\r\n                      </b-row>\r\n\r\n                </div>\r\n            </div>  \r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { mapGetters} from \"vuex\";\r\nimport HospitalService from '@/services/HospitalService'\r\nimport AccountService from '@/services/AccountService'\r\nimport AdminService from '@/services/AdminService'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        hospitals_register:[],\r\n        account_hospital_register:[],\r\n        fields: [\r\n          {key: 'name_hospital', label: 'Tên bệnh viện', sortable: true, class: 'text-center'},\r\n          { key: 'phone_hospital', label: 'Số điện thoại', sortable: true, sortDirection: 'desc', class: 'text-center' },\r\n          { key: 'address_hospital', label: 'Địa chỉ' },\r\n          { key: 'email', label: 'Email'},\r\n          { key: 'actions', label: 'Actions', class: 'd-flex justify-content-center ' }\r\n        ],\r\n        totalRows: 1,\r\n        currentPage: 1,\r\n        perPage: 5,\r\n        pageOptions: [5, 10, 15],\r\n        filter: null,\r\n        infoModal: {\r\n          id: 'info-modal',\r\n          title: '',\r\n          content: ''\r\n        },\r\n        error:'',\r\n        id_account:'',\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"isUserLoggedIn\",\"hospital_account\",\"hospitalInfomation\"])\r\n    },\r\n    async mounted() {\r\n      const user = localStorage.getItem(\"user\")\r\n      const userJSON = JSON.parse(user)\r\n      const roles = userJSON.roles\r\n      this.hospitals_register = (await HospitalService.getAllRegisterHospitals(roles)).data\r\n      this.account_hospital_register = (await AccountService.getAllRegisterAcountHospitals(roles)).data\r\n      this.totalRows = this.hospitals_register.length\r\n    },\r\n    methods: {\r\n      emitUpdateHospitalRegister(){\r\n        this.$root.$emit('UpdateHospitalRegister')\r\n      },\r\n      async refuseRegiterHospital(item, index, button){\r\n        const delete_result = (await AdminService.refuseRegiterHospital({\r\n          email: item.email\r\n        })).data\r\n\r\n          this.$toasted.show(`Đã xóa ${item.name_hospital} Thành công !!`, { \r\n            theme: \"bubble\", \r\n            position: \"bottom-right\", \r\n            duration : 2000\r\n        });\r\n        if (~index) // if the hospitals_register exists in array(Bitwise NOT operator.)\r\n          this.hospitals_register.splice(index, 1)\r\n      },\r\n\r\n      async acceptRegisterHospital(item, index, button){\r\n            if(!this.id_account){\r\n                try {\r\n                    const response = await AuthenticationService.register({\r\n                      email: item.email,\r\n                      password: item.password,\r\n                      roles: 2\r\n                    })\r\n                    this.id_account = response.data.user.id\r\n                }catch (error) {\r\n                        this.$toasted.show(`Có Lỗi Xảy ra ${error.response.data.error}  !!`, { \r\n                            theme: \"bubble\", \r\n                            position: \"bottom-right\", \r\n                            duration : 2000\r\n                        });\r\n                      }\r\n                  }\r\n          try {\r\n            const response2 = await AuthenticationService.hospital({\r\n                id_account:this.id_account,\r\n                name_hospital:item.name_hospital,         \r\n                phone_hospital:item.phone_hospital,\r\n                address_hospital:item.address_hospital\r\n            })\r\n            this.$toasted.show(`Đã Thêm ${item.name_hospital} Thành công !!`, { \r\n              theme: \"bubble\", \r\n              position: \"bottom-right\", \r\n              duration : 2000\r\n          });\r\n          try {\r\n            await AdminService.refuseRegiterHospital({email: item.email})            \r\n          } catch (error) {\r\n            this.$toasted.show(`Có Lỗi Xảy ra ${error.response.data.error}  !!`, { \r\n              theme: \"bubble\", \r\n              position: \"bottom-right\", \r\n              duration : 2000\r\n          });\r\n          }\r\n\r\n          if (~index) // if the hospitals_register exists in array(Bitwise NOT operator.)\r\n            this.hospitals_register.splice(index, 1)\r\n          this.$store.dispatch(\"fetch_HospitalList\")\r\n          this.$store.dispatch(\"fetch_AccountHospitalList\")\r\n          }catch (error) {\r\n              this.error = error.response.data.error\r\n            }\r\n        },\r\n      onFiltered(filteredItems) {\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n*{\r\n    font-size: 14px;\r\n    font-family: \"Roboto\",\"Helvetica\",\"Arial\",sans-serif;\r\n    color: rgba(0,0,0,.54);\r\n}\r\n.bg{\r\n    background-repeat: no-repeat;\r\n    background-size:cover\r\n}\r\n.main_register{\r\n    max-width: 95vw;\r\n    width: 100%;\r\n    background:white;\r\n    border-radius: 2px;\r\n    background: white;\r\n}\r\n.p_1r{\r\n    padding: 1rem;\r\n}\r\n.mlr_1-5r{\r\n    margin: 0 1.5rem;\r\n}\r\n.hello{\r\n  padding-left: 2rem;\r\n\r\n}\r\n.modify-btn{\r\n  color:#365899;\r\n}\r\n.modify-btn:hover{\r\n  text-decoration: underline;\r\n  color: #273f6e;\r\n}\r\n\r\n.model_wrapper{\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(190,195,201);\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n}\r\n.model_wrapper:first-child{\r\n  border-top: 1px solid #aaa;\r\n}\r\n.model_wrapper:last-child{\r\n  border-bottom: 1px solid #aaa;\r\n}\r\n.model_wrapper:hover{\r\n  background: #f5f6f7;\r\n  \r\n}\r\n.model_title{\r\n  color: #333;\r\n}\r\n.orange-btn{\r\n  background:#FF6F00;\r\n  color:white;\r\n  \r\n}\r\n.alert-error{\r\n  color:red;\r\n}\r\n\r\n</style>\r\n "]}]}