{"remainingRequest":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\src\\components\\content\\patient_modules\\patient_views_modules\\ListPatient.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\src\\components\\content\\patient_modules\\patient_views_modules\\ListPatient.vue","mtime":1594480142492},{"path":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594480122516},{"path":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1594480121032},{"path":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594480122516},{"path":"C:\\Users\\TRUC XIU\\CongThongTinSauDaiHoc\\master_portal\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1594480141044}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters} from \"vuex\";\r\nimport PatientService from '@/services/PatientService'\r\nimport DrugService from '@/services/DrugService'\r\n  export default {\r\n     data(){\r\n      return{\r\n        showModal: false,\r\n        infoModal: {\r\n            id: 'info-modal',\r\n            title: '',\r\n            content: '',\r\n          },\r\n          user:null,\r\n          get isUserLoggedIn() {\r\n            return localStorage.getItem('isUserLoggedIn' || false);\r\n          },\r\n          arrayNameDoctor:[],\r\n          condition:false,\r\n          filesDisplay: [],\r\n          filesDisplay2:[]\r\n      }\r\n    },\r\n    computed: {\r\n        ...mapGetters(\r\n      [\"patient_records\",\r\n      \"patient_records_details\",\r\n      \"fields\",\r\n      \"pageOptions\",\r\n      \"nameDoctorWrite_records\",\r\n      \"AlternativeRecord\",\r\n      \"patientInfo\"]\r\n    ),\r\n    totalRows: {\r\n           get(){ \r\n               return this.$store.getters.totalRows\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'totalRows'\r\n                })\r\n           }\r\n        },\r\n    patient_filter: {\r\n           get(){ \r\n               return this.$store.getters.patient_filter\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'patient_filter'\r\n                })\r\n           }\r\n        },\r\n    currentPage: {\r\n           get(){ \r\n               return this.$store.getters.currentPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'currentPage'\r\n                })\r\n           }\r\n        },\r\n    perPage: {\r\n           get(){ \r\n               return this.$store.getters.perPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'perPage'\r\n                })\r\n           }\r\n        }\r\n    },\r\n    async mounted() {\r\n      const userCONST = JSON.parse(localStorage.getItem('user'));\r\n      this.user = userCONST\r\n\r\n      if(this.user.roles == 1){\r\n        this.condition = true\r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                this.arrayNameDoctor[index] = name\r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n          this.totalRows = this.patient_records.length\r\n\r\n\r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n\r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n                }catch(error){\r\n                      this.$toasted.show(`${error.response.data.error}`, { \r\n                        theme: \"toasted-primary\", \r\n                        position: \"bottom-center\", \r\n                        duration : 5000\r\n                    });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      }else if(this.user.roles == 3){\r\n          const id_patient = this.patientInfo.id_account\r\n          const payload = (await PatientService.show(id_patient)).data\r\n          const lengthRecord = payload.length\r\n          if(lengthRecord){\r\n            const idDoctorWriteRecord = []\r\n            for(let i = 0 ;i<lengthRecord;i++){\r\n              idDoctorWriteRecord[i]= payload[i].id_doctor\r\n            }\r\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\r\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\r\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\r\n              id_account: 0\r\n            })).data\r\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\r\n        \r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n          \r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n              }catch (error) {\r\n                    this.$toasted.show(`${error.response.data.error}`, { \r\n                      theme: \"toasted-primary\", \r\n                      position: \"bottom-center\", \r\n                      duration : 5000\r\n                  });\r\n                  } \r\n              }\r\n            }\r\n          }\r\n          }  \r\n          this.condition = true\r\n      }\r\n      \r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                  this.arrayNameDoctor[index] = name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    },\r\n    methods: {\r\n      info(item, index, button) {\r\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\r\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\r\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\r\n        \r\n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\r\n          if(temp2.length >0){\r\n            temp2.forEach(element => {\r\n              let temp =              \r\n              `        \r\n              Tên thuốc: ${element.name }\r\n              Tổng: ${element.total}\r\n              Sáng: ${element.morning}\r\n              Trưa: ${element.midday}\r\n              Chiều:${element.afternoon}\r\n              Tối:${element.night}\r\n              Ghi chú:${element.note}\r\n              ` \r\n              this.infoModal.content += temp;\r\n            });\r\n          }else{\r\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\r\n          }\r\n\r\n\r\n    if(this.filesDisplay.length >0){\r\n      this.infoModal.alternativeContent = ''\r\n    }else{\r\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n    }\r\n        \r\n        }\r\n        else {\r\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\r\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n        }\r\n\r\n\r\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n  \r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = ''\r\n        this.infoModal.content = ''\r\n      },\r\n\r\n\r\n      onFiltered(filteredItems) {\r\n        // Trigger pagination to update the number of buttons/pages due to filtering\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["ListPatient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListPatient.vue","sourceRoot":"src/components/content/patient_modules/patient_views_modules","sourcesContent":["<template>\r\n  <b-container fluid v-if=\"patient_records.length && this.isUserLoggedIn && condition \">\r\n    <!-- User Interface controls -->\r\n    <div class=\"pt-5 pb-4\">\r\n      <b-row class=\"my-1 justify-content-between\">\r\n          <div class=\"pl-4\">\r\n              Bảng hồ sơ bệnh án\r\n          </div>\r\n            <div class=\"subcriber\">\r\n                <span><input type=\"text\" v-model=\"patient_filter\"  placeholder=\"Chụp X-quang...\"/></span>\r\n                <span class=\"btn-sub\" :disabled=\"!patient_filter\" @click=\"patient_filter = ''\"><img src=\"@/assets/images/search.svg\" /><span class=\"pl-2 pr-1\" >Xóa Tìm Kiếm</span></span>\r\n            </div>\r\n            <div class=\"pr-3 options\">\r\n                <span>Hiển Thị</span>\r\n                <b-form-select v-model=\"perPage\" :options=\"pageOptions\"></b-form-select>    \r\n            </div>\r\n      </b-row>\r\n    </div>\r\n\r\n    <!-- Main table element -->\r\n    <b-table\r\n      bordered\r\n      show-empty\r\n      stacked=\"md\"\r\n      :items=\"patient_records\"\r\n      :fields=\"fields\"\r\n      :current-page=\"currentPage\"\r\n      :per-page=\"perPage\"\r\n      :filter=\"patient_filter\"\r\n      @filtered=\"onFiltered\"\r\n    >\r\n\r\n      <template slot=\"patient_records_details\" slot-scope=\"row\" >\r\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-1 details btn-success\">\r\n          <img src=\"@/assets/images/notepad.svg\" />\r\n        </b-button>\r\n      </template>\r\n\r\n      <template slot=\"patient_name_doctor\" >\r\n            <li>{{ this.arrayNameDoctor[0] }}</li>\r\n      </template> \r\n\r\n      <template slot=\"patient_name_doctor\" slot-scope=\"data\" >\r\n          <ul v-if=\"condition\">\r\n            {{ arrayNameDoctor[data.index] }}\r\n          </ul>\r\n      </template>\r\n \r\n\r\n    </b-table>\r\n\r\n    <b-row>\r\n      <b-col md=\"6\" class=\"my-1\">\r\n        <b-pagination\r\n          v-model=\"currentPage\"\r\n          :total-rows=\"totalRows\"\r\n          :per-page=\"perPage\"\r\n          class=\"my-0\"\r\n        ></b-pagination>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <!-- Info modal -->\r\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\r\n      <pre>{{ infoModal.content }}</pre>\r\n      <pre>{{ infoModal.alternativeContent }}</pre>\r\n      <div class=\"row\">\r\n        <span v-for=\"(item,index) in filesDisplay\" :key=\"index\" class=\"row pl-5\"> \r\n          <img :src=\"filesDisplay[index].url\" alt=\"err\" class=\"imageDisplay\" @click.prevent=\"filesDisplay[index].isClick = !filesDisplay[index].isClick\" :class=\"{full : filesDisplay[index].isClick}\" >\r\n        </span>\r\n      </div>\r\n    </b-modal>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters} from \"vuex\";\r\nimport PatientService from '@/services/PatientService'\r\nimport DrugService from '@/services/DrugService'\r\n  export default {\r\n     data(){\r\n      return{\r\n        showModal: false,\r\n        infoModal: {\r\n            id: 'info-modal',\r\n            title: '',\r\n            content: '',\r\n          },\r\n          user:null,\r\n          get isUserLoggedIn() {\r\n            return localStorage.getItem('isUserLoggedIn' || false);\r\n          },\r\n          arrayNameDoctor:[],\r\n          condition:false,\r\n          filesDisplay: [],\r\n          filesDisplay2:[]\r\n      }\r\n    },\r\n    computed: {\r\n        ...mapGetters(\r\n      [\"patient_records\",\r\n      \"patient_records_details\",\r\n      \"fields\",\r\n      \"pageOptions\",\r\n      \"nameDoctorWrite_records\",\r\n      \"AlternativeRecord\",\r\n      \"patientInfo\"]\r\n    ),\r\n    totalRows: {\r\n           get(){ \r\n               return this.$store.getters.totalRows\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'totalRows'\r\n                })\r\n           }\r\n        },\r\n    patient_filter: {\r\n           get(){ \r\n               return this.$store.getters.patient_filter\r\n            },\r\n           set(payload){  \r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'patient_filter'\r\n                })\r\n           }\r\n        },\r\n    currentPage: {\r\n           get(){ \r\n               return this.$store.getters.currentPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'currentPage'\r\n                })\r\n           }\r\n        },\r\n    perPage: {\r\n           get(){ \r\n               return this.$store.getters.perPage\r\n            },\r\n           set(payload){\r\n               this.$store.dispatch(\"update_inforListPatient\",{\r\n                    payloadValue: payload,\r\n                    payloadRouter:'perPage'\r\n                })\r\n           }\r\n        }\r\n    },\r\n    async mounted() {\r\n      const userCONST = JSON.parse(localStorage.getItem('user'));\r\n      this.user = userCONST\r\n\r\n      if(this.user.roles == 1){\r\n        this.condition = true\r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n          for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n            if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n              let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                this.arrayNameDoctor[index] = name\r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n          this.totalRows = this.patient_records.length\r\n\r\n\r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n\r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n                }catch(error){\r\n                      this.$toasted.show(`${error.response.data.error}`, { \r\n                        theme: \"toasted-primary\", \r\n                        position: \"bottom-center\", \r\n                        duration : 5000\r\n                    });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      }else if(this.user.roles == 3){\r\n          const id_patient = this.patientInfo.id_account\r\n          const payload = (await PatientService.show(id_patient)).data\r\n          const lengthRecord = payload.length\r\n          if(lengthRecord){\r\n            const idDoctorWriteRecord = []\r\n            for(let i = 0 ;i<lengthRecord;i++){\r\n              idDoctorWriteRecord[i]= payload[i].id_doctor\r\n            }\r\n            const ArrayNameDoctor = (await PatientService.get_nameDoctorRecordPatient({id_doctor:idDoctorWriteRecord})).data\r\n            this.$store.dispatch(\"set_nameDoctorWrite_records\",ArrayNameDoctor)\r\n            const _DrugRecord = (await DrugService.get_DrugRecordPatient({\r\n              id_account: 0\r\n            })).data\r\n          this.$store.dispatch(\"set_patient_records_details\",_DrugRecord)\r\n        \r\n          let lengthOfAlternativeRecord = this.AlternativeRecord.length\r\n          \r\n          for(let i = 0;i<lengthOfAlternativeRecord;i++ ){\r\n            for(let index = 0;index <this.AlternativeRecord[i].length;index++ ){\r\n              if(this.AlternativeRecord[i][index].image ){\r\n                try{\r\n                  let base64String = btoa(\r\n                  new Uint8Array(this.AlternativeRecord[i][index].image.data)\r\n                      .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n                  );\r\n                    var files_temp = {\r\n                      url:null,\r\n                      id_record:null,\r\n                      isClick:false\r\n                    };\r\n                  files_temp.url = new Buffer(base64String, 'base64')\r\n                  files_temp.id_record = this.AlternativeRecord[i][index].id_record\r\n                  this.filesDisplay2.push(files_temp)\r\n              }catch (error) {\r\n                    this.$toasted.show(`${error.response.data.error}`, { \r\n                      theme: \"toasted-primary\", \r\n                      position: \"bottom-center\", \r\n                      duration : 5000\r\n                  });\r\n                  } \r\n              }\r\n            }\r\n          }\r\n          }  \r\n          this.condition = true\r\n      }\r\n      \r\n        if(this.patient_records.length){\r\n          for(let index = 0 ;index<this.patient_records.length;index++){\r\n            for(let i = 0;i<this.nameDoctorWrite_records.length;i++){\r\n              if(this.nameDoctorWrite_records[i].id_account == this.patient_records[index].id_doctor){   \r\n                let name = this.nameDoctorWrite_records[i].firstname +' '+this.nameDoctorWrite_records[i].lastname\r\n                  this.arrayNameDoctor[index] = name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    },\r\n    methods: {\r\n      info(item, index, button) {\r\n        this.infoModal.title = `${this.patient_records[index].patient_title}`\r\n        let temp2 = this.patient_records_details.filter(f => f.id_record == item.id);\r\n        this.filesDisplay = this.filesDisplay2.filter(f => f.id_record === item.id);\r\n        \r\n        if(temp2.length > 0 || this.filesDisplay.length > 0) {\r\n          if(temp2.length >0){\r\n            temp2.forEach(element => {\r\n              let temp =              \r\n              `        \r\n              Tên thuốc: ${element.name }\r\n              Tổng: ${element.total}\r\n              Sáng: ${element.morning}\r\n              Trưa: ${element.midday}\r\n              Chiều:${element.afternoon}\r\n              Tối:${element.night}\r\n              Ghi chú:${element.note}\r\n              ` \r\n              this.infoModal.content += temp;\r\n            });\r\n          }else{\r\n            this.infoModal.content = `Không có đơn thuốc nào được tìm thấy`\r\n          }\r\n\r\n\r\n    if(this.filesDisplay.length >0){\r\n      this.infoModal.alternativeContent = ''\r\n    }else{\r\n        this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n    }\r\n        \r\n        }\r\n        else {\r\n          this.infoModal.content = `Không có bản ghi nào được tìm thấy`\r\n          this.infoModal.alternativeContent = `Không có hình ảnh nào được tìm thấy`\r\n        }\r\n\r\n\r\n        this.$root.$emit('bv::show::modal', this.infoModal.id, button)\r\n  \r\n      },\r\n      resetInfoModal() {\r\n        this.infoModal.title = ''\r\n        this.infoModal.content = ''\r\n      },\r\n\r\n\r\n      onFiltered(filteredItems) {\r\n        // Trigger pagination to update the number of buttons/pages due to filtering\r\n        this.totalRows = filteredItems.length\r\n        this.currentPage = 1\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.btn-sub {\r\n   border: 2px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  padding: 6px;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n    }\r\n.btn-sub img {\r\n    height: 1.2em;\r\n    width: 1.2em;\r\n}\r\n.subcriber input {\r\n  border: 2px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n  width: 20vw;\r\n}\r\n.details{\r\n    cursor: pointer;\r\n}\r\n.details img{\r\n  height: 1.3rem;\r\n  width:1.3rem;\r\n}\r\nselect{\r\n    width: 50%;\r\n}\r\n.options select{\r\n    width: 80px;\r\n    margin-left: 1.5rem;\r\n}\r\nli{\r\n  list-style: none;\r\n}\r\n.imageDisplay {\r\n  height: 5rem;\r\n  width: 5rem;\r\n   cursor: pointer;\r\n}\r\n\r\n.imageDisplay img {\r\n  width: 150px;\r\n  border-radius: 2px;\r\n  box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.5);\r\n}\r\n.full{\r\n    position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width:40%;\r\n  height:auto;\r\n}\r\n\r\n</style>"]}]}